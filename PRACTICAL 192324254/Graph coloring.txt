def graph_coloring(graph, m):
    """Check if the graph can be colored with m colors."""
    color = [-1] * len(graph)

    def is_valid(node, c):
        for neighbor in graph[node]:
            if color[neighbor] == c:
                return False
        return True

    def backtrack(node):
        if node == len(graph):
            return True  # All nodes are colored
        for c in range(m):
            if is_valid(node, c):
                color[node] = c
                if backtrack(node + 1):
                    return True
                color[node] = -1  # Reset for backtracking
        return False

    return backtrack(0)

# Example usage
graph = {
    0: [1, 2],
    1: [0, 2],
    2: [0, 1, 3],
    3: [2]
}
m = 3  # Number of colors
is_colorable = graph_coloring(graph, m)
print(f"Graph can be colored with {m} colors: {is_colorable}")

def champagne_tower(poured, query_row, query_glass):
    """Calculate how much champagne is in the given glass after pouring."""
    # Create a 2D list to represent the tower of glasses
    tower = [[0] * (i + 1) for i in range(query_row + 1)]

    # Pour champagne into the top glass
    tower[0][0] = poured

    # Iterate through the rows of the tower
    for row in range(query_row + 1):
        for glass in range(row + 1):
            # Only consider glasses that have overflow
            if tower[row][glass] > 1:
                # Calculate the overflow
                overflow = (tower[row][glass] - 1) / 2
                # Distribute the overflow to the glasses below
                tower[row + 1][glass] += overflow
                tower[row + 1][glass + 1] += overflow
                # Cap the current glass at 1 unit
                tower[row][glass] = 1

    # Return the amount of champagne in the queried glass
    return min(1, tower[query_row][query_glass])

# Example usage
poured = 5      # Amount of champagne poured
query_row = 2   # Row of the glass we are interested in
query_glass = 1 # Glass index in the queried row
result = champagne_tower(poured, query_row, query_glass)
print(f"Amount of champagne in glass at row {query_row}, glass {query_glass}: {result}")

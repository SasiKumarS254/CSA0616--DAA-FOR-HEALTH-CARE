def large_group_intervals(s):
    """Returns intervals of large groups in the input list."""
    if not s:
        return []
    
    intervals = []
    n = len(s)
    
    # Initialize the start index of the group
    start = 0
    
    for i in range(1, n):
        # If the current element is not equal to the previous one
        if s[i] != s[start]:
            # Calculate the size of the group
            size = i - start
            if size >= 3:  # If the size of the group is at least 3
                intervals.append(f"{s[start]}->{s[i-1]}")
            # Update the start index to the current position
            start = i

    # Check for the last group
    if start < n - 1:
        size = n - start
        if size >= 3:  # If the size of the last group is at least 3
            intervals.append(f"{s[start]}->{s[n-1]}")

    return intervals

# Example usage
input_list = [1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]
output = large_group_intervals(input_list)
print(output)  # Output: ['2->2', '3->3']
